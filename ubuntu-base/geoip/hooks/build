#!/usr/bin/env bash
set -e
DIR="$(dirname "$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )")"

echo -n '' > $DIR/MAXMIND_VERSIONS

add_version() {
    local EDITION=$1
    local URL="https://download.maxmind.com/app/geoip_download?edition_id=${EDITION}&license_key=${LICENSE_KEY}&suffix=tar.gz"
    echo "$EDITION" >> $DIR/MAXMIND_VERSIONS
    curl -sI "$URL" | grep last-modified | tr -d '\r' >> $DIR/MAXMIND_VERSIONS
}

add_version GeoLite2-Country
add_version GeoLite2-City
add_version GeoLite2-ASN


build_with_upstream_tag() {
  UPSTREAM_TAG=$1

  docker build "$DIR" -t deaddev/ubuntu-base:${UPSTREAM_TAG}-geoip-builder --build-arg UPSTREAM_TAG=$UPSTREAM_TAG --build-arg "LICENSE_KEY=${LICENSE_KEY}" --target builder

  docker build "$DIR" \
    -t deaddev/ubuntu-base:${UPSTREAM_TAG}-geoip \
    --build-arg UPSTREAM_TAG=$UPSTREAM_TAG \
    --build-arg "LICENSE_KEY=${LICENSE_KEY}" \
    --cache-from deaddev/ubuntu-base:${UPSTREAM_TAG}-geoip-builder,deaddev/ubuntu-base:${UPSTREAM_TAG}-geoip
}

if [[ -z $UPSTREAM_TAG ]]; then
  build_with_upstream_tag 20.04
  build_with_upstream_tag 22.04
else
  build_with_upstream_tag ${UPSTREAM_TAG}
  docker tag deaddev/ubuntu-base:${UPSTREAM_TAG}-geoip deaddev/ubuntu-base:geoip
fi

